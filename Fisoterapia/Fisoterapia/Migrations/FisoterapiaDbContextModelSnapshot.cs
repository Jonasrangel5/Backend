// <auto-generated />
using System;
using Fisoterapia.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Fisoterapia.Migrations
{
    [DbContext(typeof(FisoterapiaDbContext))]
    partial class FisoterapiaDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Fisoterapia.Entities.Auth.TipoUsuario", b =>
                {
                    b.Property<int>("IdTipoUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idTipoUsuario");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTipoUsuario"));

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("descripcion");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2")
                        .HasColumnName("fechaCreacion");

                    b.HasKey("IdTipoUsuario");

                    b.ToTable("TipoUsuario", "usu");
                });

            modelBuilder.Entity("Fisoterapia.Entities.Auth.Usuario", b =>
                {
                    b.Property<Guid>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idUsuario");

                    b.Property<string>("Contrasena")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("contraena");

                    b.Property<DateTime?>("FechaActilizacion")
                        .HasColumnType("datetime2")
                        .HasColumnName("fechaActualizacion");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime2")
                        .HasColumnName("fechaRegistro");

                    b.Property<int?>("IdTipoUsuario")
                        .HasColumnType("int")
                        .HasColumnName("idTipoUsuario");

                    b.Property<string>("NombreCompleto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nombreCompleto");

                    b.Property<string>("NombreUsuario")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("usuario");

                    b.Property<string>("PrimerApellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("primerApellido");

                    b.Property<string>("PrimerNombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("primerNombre");

                    b.Property<string>("SegundoApellido")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("segundoApellido");

                    b.Property<string>("SegundoNombre")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("segundoNombre");

                    b.HasKey("IdUsuario");

                    b.HasIndex("IdTipoUsuario");

                    b.ToTable("Usuario", "usu");
                });

            modelBuilder.Entity("Fisoterapia.Entities.Auth.Usuario", b =>
                {
                    b.HasOne("Fisoterapia.Entities.Auth.TipoUsuario", "TipoUsuario")
                        .WithMany()
                        .HasForeignKey("IdTipoUsuario");

                    b.Navigation("TipoUsuario");
                });
#pragma warning restore 612, 618
        }
    }
}
